% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genscore.R
\name{lambda_max}
\alias{lambda_max}
\title{Analytic solution for the minimum \eqn{\lambda_{\mathbf{K}}}{\lambda_K} that gives the empty graph.}
\usage{
lambda_max(elts, symmetric, lambda_ratio = Inf)
}
\arguments{
\item{elts}{A list, elements necessary for calculations returned by \code{get_elts()}.}

\item{symmetric}{A string. If equals \code{"symmetric"}, estimates the minimizer \eqn{\mathbf{K}}{K} over all symmetric matrices; if \code{"and"} or \code{"or"}, use the "and"/"or" rule to get the support.}

\item{lambda_ratio}{A positive number (or \code{Inf}), the fixed ratio \eqn{\lambda_{\mathbf{K}}}{\lambda_K} and \eqn{\lambda_{\boldsymbol{\eta}}}{\lambda_\eta}, if \eqn{\lambda_{\boldsymbol{\eta}}\neq 0}{\lambda_\eta!=0} (non-profiled) in the non-centered setting.}
}
\value{
A number, the smallest lambda that produces the empty graph in the centered case, or that gives zero solutions for \eqn{\mathbf{K}}{K} and \eqn{\boldsymbol{\eta}}{\eta} in the non-centered case. If \code{symmetric == "and"}, it is not a tight bound for the empty graph.
}
\description{
Analytic solution for the minimum \eqn{\lambda_{\mathbf{K}}}{\lambda_K} that gives the empty graph. In the non-centered setting the bound is not tight, as it is such that both \eqn{\mathbf{K}}{K} and \eqn{\boldsymbol{\eta}}{\eta} are empty. The bound is also not tight if \code{symmetric == "and"}.
}
\examples{
if (!requireNamespace("tmvtnorm", quietly = TRUE)){
  stop("Please install package \\"tmvtnorm\\" first.", call. = FALSE)
}
require(tmvtnorm)
n <- 50
p <- 30
h_hp <- get_h_hp("min_pow", 1, 3)
mu <- rep(0, p)
K <- diag(p)
dm <- 1 + (1-1/(1+4*exp(1)*max(6*log(p)/n, sqrt(6*log(p)/n))))
x <- tmvtnorm::rtmvnorm(n, mean = mu, sigma = solve(K),
       lower = rep(0, p), upper = rep(Inf, p), algorithm = "gibbs",
       burn.in.samples = 100, thinning = 10)


elts_NC_NP <- get_elts(h_hp$h, h_hp$hp, x, setting="trun_gaussian",
                centered=FALSE, profiled=FALSE, diag=dm)

# Exact analytic solution for the smallest lambda such that K and eta are both zero,
#  but not a tight bound for K only
lambda_max(elts_NC_NP, "symmetric", 2)
# Use the upper bound as a starting point for numerical search
test_lambda_bounds2(elts_NC_NP, "symmetric", lambda_ratio=2, lower = FALSE,
     lambda_start = lambda_max(elts_NC_NP, "symmetric", 2))

# Exact analytic solution for the smallest lambda such that K and eta are both zero,
#  but not a tight bound for K only
lambda_max(elts_NC_NP, "or", 2)
# Use the upper bound as a starting point for numerical search
test_lambda_bounds2(elts_NC_NP, "or", lambda_ratio=2, lower = FALSE,
     lambda_start = lambda_max(elts_NC_NP, "or", 2))

# An upper bound, not tight.
lambda_max(elts_NC_NP, "and", 2)
# Use the upper bound as a starting point for numerical search
test_lambda_bounds2(elts_NC_NP, "and", lambda_ratio=2, lower = FALSE,
     lambda_start = lambda_max(elts_NC_NP, "and", 2))


elts_NC_P <- get_elts(h_hp$h, h_hp$hp, x, setting="trun_gaussian",
              centered=FALSE, profiled=TRUE, diag=dm)
# Exact analytic solution
lambda_max(elts_NC_P, "symmetric")
# Numerical solution, should be close to the analytic solution
test_lambda_bounds2(elts_NC_P, "symmetric", lambda_ratio=Inf, lower = FALSE,
     lambda_start = NULL)

# Exact analytic solution
lambda_max(elts_NC_P, "or")
# Numerical solution, should be close to the analytic solution
test_lambda_bounds2(elts_NC_P, "or", lambda_ratio=Inf, lower = FALSE,
     lambda_start = NULL)

# An upper bound, not tight
lambda_max(elts_NC_P, "and")
# Use the upper bound as a starting point for numerical search
test_lambda_bounds2(elts_NC_P, "and", lambda_ratio=Inf, lower = FALSE,
     lambda_start = lambda_max(elts_NC_P, "and"))
}
